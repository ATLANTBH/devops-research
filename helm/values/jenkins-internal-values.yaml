agent:
  alwaysPullImage: false
  componentName: jenkins-slave
  enabled: true
  image: jenkins/jnlp-slave
  kind: Pod
  privileged: false
  cpu: "1000m"
  memory: "2048Mi"
  volumes:
  - hostPath: /var/run/docker.sock
    mountPath: /var/run/docker.sock
    type: HostPath
  resources:
    requests:
      cpu: "1000m"
      memory: "1024Mi"
    limits:
      cpu: "2000m"
      memory: "2048Mi"
master:
  adminUser: admin
  component: jenkins-master
  customConfigMap: false
  healthProbes: true
  healthProbesTimeout: 60
  hostName: jenkins.dev.k8s.abhapp.com
  hostNetworking: false
  image: jenkins/jenkins
  imagePullPolicy: Always
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.allow-http: "false"
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/whitelist-source-range: 77.77.214.216/30
    hostName: jenkins.dev.k8s.abhapp.com
    tls:
    - hosts:
      - jenkins.dev.k8s.abhapp.com
      secretName: jenkins-internal-ingress-ssl
  installPlugins:
  - kubernetes:1.17.1
  - workflow-aggregator:2.6
  - workflow-job:2.33
  - credentials-binding:1.19
  - git:3.10.1
  - github-oauth:0.32
  - greenballs:1.15
  - prometheus:latest
  componentName: jenkins-master
  nodeSelector: {}
  scriptApproval:
  - method groovy.json.JsonSlurperClassic parseText java.lang.String
  - new groovy.json.JsonSlurperClassic
  - staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods leftShift java.util.Map
    java.util.Map
  - staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods split java.lang.String
  serviceAnnotations: {}
  servicePort: 80
  serviceType: ClusterIP
  slaveListenerPort: 50000
  tolerations: {}
  useSecurity: true
  prometheus:
    enabled: true

networkPolicy:
  apiVersion: networking.k8s.io/v1
  enabled: false

rbac:
  create: true



